import type { ContractState, ContractAddress, ZswapLocalState, SigningKey } from '@midnight-ntwrk/compact-runtime';
import type { FinalizedTxData } from '@midnight-ntwrk/midnight-js-types';
import type { CoinInfo, UnprovenTransaction } from '@midnight-ntwrk/ledger';
import type { Contract, ImpureCircuitId } from './contract-model';
import type { CallResult } from './call';
/**
 * Data relevant to any unsubmitted transaction.
 */
export type UnsubmittedTxData = {
    /**
     * The unproven ledger transaction produced.
     */
    readonly unprovenTx: UnprovenTransaction;
    /**
     * New coins created during the construction of the transaction.
     */
    readonly newCoins: CoinInfo[];
};
/**
 * Base type for public data relevant to an unsubmitted deployment transaction.
 */
export type UnsubmittedDeployTxPublicDataBase = {
    /**
     * The ledger address of the contract that was deployed.
     */
    readonly contractAddress: ContractAddress;
    /**
     * The initial public state of the contract deployed to the blockchain.
     */
    readonly initialContractState: ContractState;
};
/**
 * Base type for private data relevant to an unsubmitted deployment transaction.
 */
export type UnsubmittedDeployTxPrivateDataBase<PS> = {
    /**
     * The initial private state of the contract deployed to the blockchain. This
     * value is persisted if the transaction succeeds.
     */
    readonly initialPrivateState: PS;
    /**
     * The signing key that was added as the deployed contract's maintenance authority.
     */
    readonly signingKey: SigningKey;
};
/**
 * Base type for data relevant to an unsubmitted deployment transaction.
 */
export type UnsubmittedDeployTxDataBase<PS> = {
    /**
     * The public data (data that will be revealed upon tx submission) relevant to the deployment transaction.
     */
    readonly public: UnsubmittedDeployTxPublicDataBase;
    /**
     * The private data (data that will not be revealed upon tx submission) relevant to the deployment transaction.
     */
    readonly private: UnsubmittedDeployTxPrivateDataBase<PS>;
};
/**
 * Data for an unsubmitted deployment transaction.
 */
export type UnsubmittedDeployTxData<PS> = UnsubmittedDeployTxDataBase<PS> & {
    /**
     * The data of this transaction that is only visible on the user device.
     */
    readonly private: UnsubmittedTxData & {
        /**
         * The Zswap state produced as a result of running the contract constructor. Useful for when
         * inputs or outputs are created in the contract constructor.
         */
        readonly initialZswapState: ZswapLocalState;
    };
};
/**
 * Data for a finalized deploy transaction submitted in this process.
 */
export type FinalizedDeployTxDataBase<PS> = UnsubmittedDeployTxDataBase<PS> & {
    /**
     * The data of this transaction that is visible on the blockchain.
     */
    readonly public: FinalizedTxData;
};
/**
 * Data for a finalized deploy transaction submitted in this process.
 */
export type FinalizedDeployTxData<PS = unknown> = UnsubmittedDeployTxData<PS> & {
    /**
     * The data of this transaction that is visible on the blockchain.
     */
    readonly public: FinalizedTxData;
};
/**
 * Data for an unsubmitted call transaction.
 */
export type UnsubmittedCallTxData<PS, C extends Contract<PS>, ICK extends ImpureCircuitId<C>> = CallResult<PS, C, ICK> & {
    /**
     * Private data relevant to this call transaction.
     */
    readonly private: UnsubmittedTxData;
};
/**
 * Data for a submitted, finalized call transaction.
 */
export type FinalizedCallTxData<PS, C extends Contract<PS>, ICK extends ImpureCircuitId<C>> = UnsubmittedCallTxData<PS, C, ICK> & {
    /**
     * Public data relevant to this call transaction.
     */
    readonly public: FinalizedTxData;
};
//# sourceMappingURL=tx-model.d.ts.map